module Workarea
  decorate Storefront::ProductViewModel, with: :flow_io do
    decorated do
      delegate :sell_min_sku, :sell_max_sku, :original_min_sku, :original_max_sku, to: :pricing
    end

    def original_min_sku
      return nil unless has_prices?

      if pricing.msrp_min_price.present? && pricing.msrp_min_price > sell_min_price
        pricing.msrp_min_sku
      else
        pricing.regular_min_sku
      end
    end

    def original_max_sku
      return nil unless has_prices?

      if pricing.msrp_max_price.present? && pricing.msrp_max_price > sell_max_price
        pricing.msrp_max_sku
      else
        pricing.regular_max_sku
      end
    end

    def pricing
      super.tap do |pricing_collection|
        if options[:flow_experience]
          pricing_collection.flow_experience = options[:flow_experience]
        end
      end
    end

    def one_price?
      return false if original_min_price.nil?
      super
    end
  end
end
