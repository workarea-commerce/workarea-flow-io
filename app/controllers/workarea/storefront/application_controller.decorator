module Workarea
  decorate Storefront::ApplicationController, with: :flow_io do
    decorated do
      helper_method :flow_experience
      helper Workarea::Storefront::FlowContentHelper

      etag { flow_experience&.key }
    end

    def flow_experience
      @flow_experience ||=
        if request.has_header?('flow.io.experience')
          request['flow.io.experience']
        elsif cookies[:flow_experience] && experience = JSON.parse(cookies[:flow_experience], quirks_mode: true)
          ::Io::Flow::V0::Models::ExperienceGeo.new(experience)
        else
          nil
        end
    rescue
      nil
    end

    def default_url_options(*)
      flow_locale = flow_experience&.country&.downcase

      return super unless flow_locale.present?

      super.merge(locale: flow_locale)
    end

    def current_order
      @current_order ||= super.tap do |order|
        order.build_experience_from_flow_model(flow_experience)
      end
    end

    private

    def set_locale
      I18n.locale =
        if I18n.available_locales.include?(params[:locale])
          params[:locale]
        else
          I18n.default_locale
        end
    end

    def view_model_options
      super.merge(flow_experience: flow_experience)
    end

    def set_vary_headers
      super

      response.headers['X-Flow-Experience'] = flow_experience&.key
      response.headers['Vary'] = [response.headers['Vary'], 'X-Flow-Experience'].compact.join(', ')
    end
  end
end
