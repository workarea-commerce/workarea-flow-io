module Workarea
  decorate Storefront::ApplicationController, with: :flow_io do
    decorated do
      helper_method :flow_experience
      helper Workarea::Storefront::FlowContentHelper
      helper Workarea::Storefront::FlowAnalyticsHelper
    end

    def flow_session
      return unless cookies['_f60_session'].present?

      @flow_session ||= FlowIo.client.sessions.get_by_session(cookies['_f60_session'])
    end

    def flow_experience
      flow_session&.experience
    end

    def current_order
      @current_order ||= super.tap do |order|
        if flow_experience.present?
          order.build_experience_from_flow_model(flow_experience)
        end
      end
    end

    private

    def set_locale
      I18n.locale =
        if I18n.available_locales.include?(params[:locale])
          params[:locale]
        else
          I18n.default_locale
        end
    end

    def set_site_locale
      @previous_locale = I18n.locale
      I18n.locale =
        if I18n.available_locales.include?(params[:locale])
          params[:locale]
        else
          current_site.try(:locale) || I18n.default_locale
        end
      yield
    ensure
      I18n.locale = @previous_locale
    end

    def view_model_options
      super.merge(flow_experience: flow_experience)
    end

    def set_vary_headers
      super

      response.headers['X-Flow-Experience'] = flow_experience&.key
      response.headers['Vary'] = [response.headers['Vary'], 'X-Flow-Experience'].compact.join(', ')
    end
  end
end
