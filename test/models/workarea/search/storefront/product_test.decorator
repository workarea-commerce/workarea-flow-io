module Workarea
  decorate Search::Storefront::ProductTest, with: :flow_io do
    def test_localized_prices
      item_1 = build_flow_io_local_item(regular: 5.to_m("CAD"), sale: 4.to_m("CAD"))
      item_2 = build_flow_io_local_item(regular: 7.to_m("CAD"))

      create_pricing_sku_with_flow(id: 'SKU1', on_sale: true, flow_io_local_items: [item_1])
      create_pricing_sku_with_flow(id: 'SKU2', flow_io_local_items: [item_2])

      product = Catalog::Product.new(
        name: "Test Product",
        variants: [ { sku: "SKU1" }, { sku: "SKU2" }]
      )

      search_product = Search::Storefront::Product.new(product)

      assert_equal(search_product.numeric["price_canada"], [4.0, 7.0])
    end

    def test_localized_price_sorts
      item_1 = build_flow_io_local_item(regular: 5.to_m("CAD"), sale: 4.to_m("CAD"))
      item_2 = build_flow_io_local_item(regular: 7.to_m("CAD"))

      create_pricing_sku_with_flow(id: 'SKU1', on_sale: true, flow_io_local_items: [item_1])
      create_pricing_sku_with_flow(id: 'SKU2', flow_io_local_items: [item_2])

      product = Catalog::Product.new(
        name: "Test Product",
        variants: [ { sku: "SKU1" }, { sku: "SKU2" }]
      )

      search_product = Search::Storefront::Product.new(product)

      assert_equal(search_product.sorts["price_canada"], 4.0)
    end
  end
end
